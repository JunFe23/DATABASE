-- 8,9,

-- 5.
SELECT STUDNO,NAME,USERID FROM STUDENT;

-- 6.
SELECT DISTINCT DEPTNO FROM STUDENT;

-- 7. 
SELECT NAME 이름, BIRTHDATE 생년월일, HEIGHT AS "키(cm)", WEIGHT AS "몸무게(kg)"
FROM STUDENT;

-- 8.
SELECT NAME||' 학생의 키는 '||HEIGHT||'cm이고 몸무게는 '||WEIGHT||'kg이다.'
FROM STUDENT;

-- 9.
SELECT NAME, HEIGHT, WEIGHT, (HEIGHT-WEIGHT)*0.9 표준체중
FROM STUDENT;

-- 10.
DESC STUDENT;
SELECT STUDNO, NAME, DEPTNO
FROM STUDENT;

-- 11.
-- SQL명령문 :
-- 데이터베이스와 통신하는 언어로써
-- 데이터베이스내의 테이블에 데이터를 입력, 수정, 삭제, 조회의 목적으로 사용 ANSI, ISO표준에 기초
-- 데이터와 테이블에 직접적인 정의와 명령이 가능
-- SQL버퍼 사용
-- 여러행 입력 가능
-- 명령어 실행시 종료문자(;) 사용
-- 키워드 축약 불가능

-- SQL*Plus 명령어 :
-- SQL명령어를 데이터베이스로 전송하는것이 목적인 유틸리티 ORACLE사의 독립 툴로서
-- 어떠한 표준도 따르지 않음 데이터에 대한 아무런 정의도 내릴 수 없음
-- SQL버퍼를 사용하지 않음
-- 단일행만 입력 가능
-- 명령어 실행시 종료문자를 사용하지 않음 키워드 축약가능 (예 ED(IT))


-- p.19 5-1
SELECT NAME, GRADE, HEIGHT
FROM STUDENT
WHERE HEIGHT>170
ORDER BY HEIGHT DESC;

-- 5-2
SELECT NAME, USERID, GRADE
FROM STUDENT
WHERE DEPTNO=101 AND GRADE>=3;

-- 5-3
SELECT NAME,GRADE,HEIGHT
FROM STUDENT
WHERE HEIGHT>=165 AND HEIGHT<=175;

SELECT NAME,GRADE,HEIGHT
FROM STUDENT
WHERE HEIGHT BETWEEN 165 AND 175;

-- 5-4
SELECT NAME, USERID, DEPTNO
FROM STUDENT
WHERE NAME LIKE '이%';

-- 5-5
SELECT DEPTNO
FROM PROFESSOR
INTERSECT 
SELECT DEPTNO
FROM DEPARTMENT
MINUS
SELECT DEPTNO
FROM STUDENT;

-- 5-6
SELECT NAME, SAL, DEPTNO
FROM PROFESSOR
WHERE COMM IS NULL;

-- 5-7
SELECT PROFNO,NAME,SAL,COMM
FROM PROFESSOR
ORDER BY SAL DESC;

-- 5-8
SELECT PROFNO,NAME,SAL,SAL*12,DEPTNO
FROM PROFESSOR
ORDER BY DEPTNO DESC, SAL*12 ASC;

-- 5-9
SELECT NAME,SAL,COMM
FROM PROFESSOR
WHERE (SAL>=300 AND COMM IS NOT NULL) OR SAL >=450;

-- 5-10
SELECT P.NAME PROFNAME,S.STUDNO,S.NAME STUDNETNAME
FROM PROFESSOR P, STUDENT S
WHERE P.DEPTNO=201 AND S.DEPTNO=201;

SELECT PROFNO,NAME
FROM PROFESSOR
WHERE DEPTNO=201
UNION
SELECT STUDNO,NAME
FROM STUDENT
WHERE DEPTNO=201;


-- 6-1
SELECT NAME, USERID
FROM STUDENT
WHERE LENGTH(USERID)>=7;

-- 6-2
SELECT NAME,LOWER(USERID),'19'||BIRTHDATE
FROM STUDENT
ORDER BY IDNUM;

SELECT NAME,LOWER(USERID),TO_CHAR(BIRTHDATE,'YYYY/MM/DD') BIRTHDATE
FROM STUDENT
ORDER BY IDNUM;

-- 6-3
SELECT NAME, LPAD(NVL(PROFNO,0),4,0) PROFNO
FROM STUDENT;

-- 6-4
SELECT NAME,
CASE 
WHEN ((WEIGHT-(HEIGHT-WEIGHT)*0.9)/(HEIGHT-WEIGHT)*0.9)*100<10 THEN '정상'
WHEN ((WEIGHT-(HEIGHT-WEIGHT)*0.9)/(HEIGHT-WEIGHT)*0.9)*100 BETWEEN 10 AND 20 THEN '과체중'
WHEN ((WEIGHT-(HEIGHT-WEIGHT)*0.9)/(HEIGHT-WEIGHT)*0.9)*100>20 THEN '비만'
END 비만도 
FROM STUDENT;

-- 6-5
SELECT STUDNO,NAME,DEPTNO,
DECODE(MOD(STUDNO,3),0,'A',1,'B','C') TEAM
FROM STUDENT;

SELECT STUDNO,NAME,DEPTNO,
CASE
WHEN MOD(STUDNO,3)=0 THEN 'A'
WHEN MOD(STUDNO,3)=1 THEN 'B'
ELSE 'C'
END TEAM
FROM STUDENT;

-- 6-6
SELECT TEL
FROM STUDENT;

SELECT NAME,TEL,
DECODE(SUBSTR(TEL,1,3),'02)','서울','051','부산','052','울산','053','대구','기타')
FROM STUDENT;

-- 6-7
SELECT NAME,HIREDATE,
TO_CHAR(ROUND(SAL*1.15,0),'9,999') ROUND_SAL,
TO_CHAR(TRUNC(SAL*1.15,0),'9,999') TRUNC_SAL
FROM PROFESSOR
WHERE TO_CHAR(HIREDATE,'MM') BETWEEN 1 AND 3;

-- 6-8
SELECT NAME,HIREDATE,TRUNC(MONTHS_BETWEEN(SYSDATE,HIREDATE),0) WORKING_MONTHS
FROM PROFESSOR
ORDER BY WORKING_MONTHS DESC;

-- 6-9
SELECT DEPTNO,DNAME||'는 '||LOC DNAME_LOC
FROM DEPARTMENT;

SELECT CONCAT(DNAME,CONCAT('IS ',LOC)) DNAME_LOC
FROM DEPARTMENT;

-- 6-10
SELECT DNAME,COLLEGE,
CASE
WHEN COLLEGE IS NULL THEN DNAME
ELSE DEPTNO||' '||DNAME
END DEPTNO_DNAME
FROM DEPARTMENT;


-- 7-1
SELECT DEPTNO,AVG(WEIGHT)AVG_WEIGHT,COUNT(*)
FROM STUDENT
GROUP BY DEPTNO
ORDER BY AVG_WEIGHT DESC;

-- 7-2
SELECT MAX(COUNT(GRADE))MAX_CNT,MIN(COUNT(GRADE))MIN_CNT
FROM STUDENT
GROUP BY GRADE;

SELECT GRADE,COUNT(GRADE)GRADE_COUNT
FROM STUDENT
GROUP BY GRADE
ORDER BY GRADE ASC;

-- 7-3
SELECT DEPTNO,GRADE,COUNT(*),MAX(HEIGHT),MIN(HEIGHT),MAX(WEIGHT)
FROM STUDENT
GROUP BY DEPTNO,GRADE
HAVING COUNT(*)>=3;

-- 7-4
SELECT DEPTNO,GRADE,AVG(HEIGHT)
FROM STUDENT
GROUP BY ROLLUP(DEPTNO,GRADE);

-- 7-5
SELECT DEPTNO,GRADE,AVG(WEIGHT)
FROM STUDENT
GROUP BY CUBE(DEPTNO,GRADE);

-- 7-6
SELECT DEPTNO,COUNT(*)
FROM PROFESSOR
GROUP BY DEPTNO
HAVING COUNT(*)<=2
ORDER BY DEPTNO ASC;

-- 7-7
SELECT ROUND(MAX(SAL+COMM),1)MAX_SAL, ROUND(MIN(SAL+COMM),1)MIN_SAL,
ROUND(AVG(SAL+COMM),1)AVG_SAL
FROM PROFESSOR;

-- 7-8
SELECT DEPTNO,POSITION,AVG(SAL)
FROM PROFESSOR
GROUP BY CUBE(DEPTNO,POSITION);

-- P.37 #1
SELECT POSITION,AVG(SAL),
CASE
WHEN AVG(SAL)>300 THEN '우수'
ELSE '보통'
END 평가
FROM PROFESSOR
GROUP BY POSITION;

-- #2
--SELECT RK,COUNT(RK)
--FROM
--(SELECT HEIGHT, NTILE(4) OVER(ORDER BY HEIGHT) RK
--FROM STUDENT)
--GROUP BY RK
--ORDER BY RK;
SELECT ACC,COUNT(*)
FROM
(SELECT CASE WHEN HEIGHT <=160 THEN 'A'
            WHEN HEIGHT BETWEEN 161 AND 170 THEN 'B'
            WHEN HEIGHT BETWEEN 171 AND 180 THEN 'C'
            WHEN HEIGHT > 180 THEN 'D'
        END AS ACC
FROM STUDENT)
GROUP BY ROLLUP(ACC);


-- 8-1
-- WHERE
SELECT D.DNAME,S.NAME
FROM DEPARTMENT D, STUDENT S
WHERE D.DEPTNO=S.DEPTNO;

-- NATURAL JOIN
SELECT D.DNAME,S.NAME
FROM DEPARTMENT D NATURAL JOIN STUDENT S;

-- JOIN ~ USING
SELECT D.DNAME,S.NAME
FROM DEPARTMENT D JOIN STUDENT S USING(DEPTNO);

-- 8-4
SELECT S.DEPTNO,P.NAME
FROM STUDENT S,PROFESSOR P
WHERE S.PROFNO=P.PROFNO(+)
ORDER BY P.PROFNO;

-- 8-5
SELECT A.DNAME||'의 소속은 '||B.DNAME
FROM DEPARTMENT A, DEPARTMENT B
WHERE A.COLLEGE=B.DEPTNO;

-- P.43 #1
SELECT ORG.DNAME
FROM DEPARTMENT DEPT,DEPARTMENT ORG
WHERE DEPT.DEPTNO=ORG.COLLEGE AND DEPT.DNAME='공과대학';

-- #2
SELECT D.DNAME,S.NAME STUD_NAME,P.NAME PROF_NAME
FROM DEPARTMENT D,STUDENT S,PROFESSOR P
WHERE D.DEPTNO=S.DEPTNO AND S.PROFNO=P.PROFNO;

-- #3
SELECT S.NAME STUD_NAME,P.NAME PROF_NAME,D.DNAME
FROM STUDENT S,PROFESSOR P,DEPARTMENT D
WHERE S.DEPTNO=D.DEPTNO AND S.PROFNO=P.PROFNO;

-- #4
SELECT P.NAME,COUNT(S.DEPTNO)
FROM PROFESSOR P, STUDENT S
WHERE P.PROFNO=S.PROFNO
GROUP BY P.NAME;